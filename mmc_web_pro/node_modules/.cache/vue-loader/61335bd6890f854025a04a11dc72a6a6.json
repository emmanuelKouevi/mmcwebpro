{"remainingRequest":"/home/kouevi/mmc_web_pro/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kouevi/mmc_web_pro/src/components/espace_client/EspaceClient.vue?vue&type=style&index=0&id=637df662&scoped=true&lang=css&","dependencies":[{"path":"/home/kouevi/mmc_web_pro/src/components/espace_client/EspaceClient.vue","mtime":1667392689136},{"path":"/home/kouevi/mmc_web_pro/node_modules/css-loader/dist/cjs.js","mtime":1663945505546},{"path":"/home/kouevi/mmc_web_pro/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1663945506522},{"path":"/home/kouevi/mmc_web_pro/node_modules/postcss-loader/src/index.js","mtime":1663945505794},{"path":"/home/kouevi/mmc_web_pro/node_modules/cache-loader/dist/cjs.js","mtime":1663945505146},{"path":"/home/kouevi/mmc_web_pro/node_modules/vue-loader/lib/index.js","mtime":1663945506422}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoudG9vbGJhcl90aXRsZXsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgY29sb3I6ICM1ZjI3Y2Q7Cn0KCi5wcmljZXsKICAgIG1hcmdpbi10b3A6IDA7Cn0KCi5jaGVja2JveGVzewogICAgbWFyZ2luLXRvcDogLTEwcHg7Cn0KCg=="},{"version":3,"sources":["EspaceClient.vue"],"names":[],"mappings":";;AA67BA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"EspaceClient.vue","sourceRoot":"src/components/espace_client","sourcesContent":["<template>\n\n    <v-app>\n\n        <v-app-bar app max-height=\"150px\" fixed>\n\n            <v-col cols=\"4\"><v-toolbar-title class=\"toolbar_title\">MA MAISON.COM</v-toolbar-title></v-col>\n\n            <v-col cols=\"6\" class=\"mt-7\">\n\n                <v-row>\n\n                    <v-col><v-text-field label=\"Rechercher un logement ...\" placeholder=\"Rechercher un logement ...\" solo></v-text-field></v-col>\n\n                    <v-col class=\"mt-2\"><v-btn color=\"success\"><v-icon>mdi-magnify</v-icon> Rechercher</v-btn></v-col>\n\n                </v-row>\n                \n            </v-col>  \n\n            <v-col>\n\n                <v-menu v-model=\"menu\" :close-on-content-click=\"false\" :nudge-width=\"200\" offset-y>\n\n                    <template v-slot:activator=\"{ on, attrs }\">\n\n                        <v-btn color=\"indigo\" text dark v-bind=\"attrs\" v-on=\"on\">Mon profil <v-icon>mdi-menu-down</v-icon></v-btn>\n\n                    </template>\n  \n                    <v-card>\n\n                        <v-list>\n\n                        <v-list-item>\n\n                            <v-list-item-avatar><img src=\"../../assets/kouevi_photo.jpg\"></v-list-item-avatar>\n            \n                            <v-list-item-content><v-list-item-title>Emmanuel Herve Kouevi</v-list-item-title>\n\n                            <v-list-item-subtitle>SICOGI</v-list-item-subtitle>\n\n                            </v-list-item-content>\n            \n                            <v-list-item-action>\n\n                            <v-btn icon><v-icon>mdi-account-edit</v-icon></v-btn>\n\n                            </v-list-item-action>\n\n                        </v-list-item>\n\n                        </v-list>\n\n            \n                        <v-divider></v-divider>\n\n            \n                        <v-list>\n                        \n                        <v-list-item>\n\n                            <v-list-item-icon><v-icon>mdi-logout</v-icon></v-list-item-icon>\n\n                            <v-btn text>Déconnexion</v-btn>\n\n                        </v-list-item>\n\n                        </v-list>\n\n                    </v-card>\n\n                </v-menu>\n\n            </v-col>\n\n        </v-app-bar>\n\n        <!-- Sizes your content based upon application components -->\n        <v-main>\n\n            <!-- Provides the application the proper gutter -->\n\n            <v-container fluid>\n\n                <v-row>\n\n                    <v-col><v-btn text color=\"info\"><v-icon>mdi-bell</v-icon> CREER UNE RÊQUETE</v-btn></v-col>\n\n                </v-row>\n\n                <v-row>\n\n                    <v-col cols=\"3\">\n                        \n                        <v-card elevation=\"3\"><span class=\"text-muted ml-3 font-weight-bold\">FILTRER PAR CRITERES</span> \n\n                            <v-divider></v-divider>\n\n                            <div class=\"critere_section\">\n\n                                <v-card-subtitle>Prix (Francs CFA)</v-card-subtitle>\n\n                                <v-container class=\"choice_critere\">\n\n                                    <v-row class=\"price\">\n\n                                        <v-col><v-text-field  type=\"number\" label=\"min\"></v-text-field></v-col>\n\n                                        <v-col><v-text-field type=\"number\" label=\"max\"></v-text-field></v-col>\n\n                                    </v-row>\n\n                                </v-container>\n\n                            </div>\n\n                            <v-divider></v-divider>\n\n                            <div class=\"critere_section\" v-for=\"critere in critereRechercheProduitLogementList\" :key=\"critere.id\">\n\n                                <div v-if=\"critere.proprieteProduitLogement != null\">\n\n                                    <div v-if=\"critere.proprieteProduitLogement.type.id == 'ref.element.typeValeur.reference'\">\n\n                                        <v-card-subtitle>{{ critere.proprieteProduitLogement.designation }}</v-card-subtitle>\n\n                                        <v-container class=\"choice_critere\">\n\n                                            <v-row v-for=\"(reference) in referenceList\" :key=\"reference.id\">\n\n                                                <v-col cols=\"12\" sm=\"2\" md=\"4\">\n\n                                                    <v-row>\n                                                    \n                                                        <v-col><v-checkbox class=\"checkboxes\" :value=\"reference.id\" :id=\"reference.id\" v-model=\"critere.valeurCritere.valeurTexte\" :label=\"reference.designation\"></v-checkbox></v-col>\n\n                                                    </v-row>\n        \n                                                </v-col>\n\n                                            </v-row>\n\n                                        </v-container>\n\n                                        <v-divider></v-divider>\n                                        \n                                    </div>\n\n                                    <div v-if=\"critere.proprieteProduitLogement.type.id == 'ref.element.typeValeur.ville'\">\n\n                                        <v-card-subtitle>{{ critere.proprieteProduitLogement.designation }}</v-card-subtitle>\n\n                                        <v-container class=\"choice_critere\">\n\n                                            <v-row v-for=\"(ville) in villesList\" :key=\"ville.id\">\n\n                                                <v-col>\n\n                                                    <v-row>\n                                                    \n                                                        <v-col><v-checkbox class=\"checkboxes\" :value=\"ville.id\" :id=\"ville.id\" v-model=\"critere.valeurCritere.valeurTexte\" :label=\"ville.designation\"></v-checkbox></v-col>\n\n                                                    </v-row>\n        \n                                                </v-col>\n\n                                            </v-row>\n\n                                        </v-container>\n\n                                        <v-divider></v-divider>\n\n                                    </div>\n\n\n                                    <div v-if=\"critere.proprieteProduitLogement.type.id == 'ref.element.typeValeur.double'\">\n                                        \n                                        <div v-if=\"critere.proprieteProduitLogement.designation == 'Superficie'\">\n\n                                            <v-card-subtitle>{{ critere.proprieteProduitLogement.designation }} (en m²)</v-card-subtitle>\n\n                                            <v-container class=\"choice_critere\">\n\n                                                <v-row>\n\n                                                    <v-col><v-text-field :value=\"getFirstValue(critere)\" type=\"number\" label=\"min\"></v-text-field></v-col>\n\n                                                    <v-col><v-text-field :value=\"getSecondValue(critere)\" type=\"number\" label=\"max\"></v-text-field></v-col>\n\n                                                </v-row>\n\n                                            </v-container>\n\n                                        </div>\n\n\n                                    </div>\n\n                                </div>\n\n                            </div>\n\n                        </v-card>\n                        \n                    </v-col>\n\n                    <v-col cols=\"9\">\n\n                        <v-container>\n\n                            <v-row>\n\n                                <v-col cols=\"6\" v-for=\"(logement) in logementsAvecImage\" :key=\"logement.id\">\n\n                                    <v-card>\n                                        \n                                        <v-img :src=\"logement.imageConsultation.contenu\" class=\"white--text align-end\" gradient=\"to bottom, rgba(0,0,0,.1), rgba(0,0,0,.5)\" height=\"200px\">\n\n                                            <v-card-title v-text=\"logement.designation\"></v-card-title>\n\n                                        </v-img>\n\n                                        <v-card-subtitle>{{ logement.description }}</v-card-subtitle>\n\n                                        <v-container class=\"ml-1\">\n\n                                            <v-row>\n\n                                                <v-col><small>Prix du logement :</small></v-col>\n\n                                                <v-col><small>{{ logement.produitLogement.prix }} FCFA</small></v-col>\n\n                                            </v-row>\n\n                                        </v-container>\n\n\n                                        <v-divider></v-divider>\n\n\n                                        <v-container class=\"mt-1\">\n\n                                            <v-row>\n\n                                                <v-col v-for=\"caracteristiqueInList in logement.produitLogement.caracteristiqueProduitLogementList\" :key=\"caracteristiqueInList.id\">\n\n                                                    <div v-if=\"caracteristiqueInList.proprieteProduitLogement.estDansListe == true\">\n\n                                                        <v-chip active text-color=\"orange\"  v-if=\"caracteristiqueInList.proprieteProduitLogement.designation === 'Nombre de Pieces'\">\n\n                                                            <small>{{ returnTrueValue(caracteristiqueInList) }} Pièce(s)</small>\n\n                                                        </v-chip>\n\n                                                        <v-chip text-color=\"orange\" v-if=\"caracteristiqueInList.proprieteProduitLogement.designation === 'Type de Logement'\">\n\n                                                            <small>{{ returnTrueValue(caracteristiqueInList) }}</small>\n\n                                                        </v-chip>\n\n                                                    </div>\n\n                                                </v-col>\n\n                                            </v-row>\n                                            \n                                        </v-container>\n  \n                                        <v-card-actions>\n\n                                            <v-btn text color=\"orange\" @click=\"consulterLogementDetail(logement)\">VOIR PLUS</v-btn>\n\n                                            <v-spacer></v-spacer>\n  \n                                            <v-btn icon><v-icon>mdi-heart</v-icon></v-btn>\n\n                                        </v-card-actions>\n\n                                    </v-card>\n                                    \n                                </v-col>\n\n                            </v-row>\n\n                        </v-container>\n\n                    </v-col>\n\n                </v-row>\n\n                <router-view></router-view>\n\n            </v-container>\n\n        </v-main>\n\n        <v-footer app>\n            <!-- -->\n        </v-footer>\n    </v-app>\n    \n</template>\n\n\n<script>\n\nimport axios from 'axios'\nimport { API_OBTENIR_LISTE_LOGEMENT_PAR_PROMOTEUR , API_OBTENIR_IMAGE_CONSULTATION , API_OBTENIR_LISTE_PROPRIETES , API_OBTENIR_LISTE_OPERATEUR_CRITERE , REF_CRITERE_OPERATEUR_BETWEEN ,REF_CRITERE_OPERATEUR_IN , API_OBTENIR_LISTE_VILLES , API_REFERENCES_PAR_FAMILLE/*REF_CRITERE_OPERATEUR_SUPERIEUR*/ } from '../globalConfig/globalConfig'\nimport { /*API_RECHERCHER_LOGEMENT_PAR_MOT_CLE ,/*REF_CRITERE_OPERATEUR_INFERIEUR ,*/ /*REF_CRITERE_OPERATEUR_INFERIEUR_EGALE , REF_CRITERE_OPERATEUR_SUPERIEUR_EGALE , REF_CRITERE_OPERATEUR_EGALE ,*/ REF_ELEMENT_TYPEVALEUR_TIME  } from '../globalConfig/globalConfig'\nimport { /*REF_ELEMENT_TYPEVALEUR_STRING ,*/ REF_ELEMENT_TYPEVALEUR_DATE , REF_ELEMENT_TYPEVALEUR_DATETIME , REF_ELEMENT_TYPEVALEUR_REFERENCE , REF_ELEMENT_TYPEVALEUR_FLOAT } from '../globalConfig/globalConfig'\nimport { REF_ELEMENT_TYPEVALEUR_VILLE , REF_ELEMENT_TYPEVALEUR_DOUBLE , REF_ELEMENT_TYPEVALEUR_INTEGER , REF_ELEMENT_TYPEVALEUR_BOOLEAN , API_RECHERCHER_PRODUIT_LOGEMENT_PAR_CRITERELIST } from '../globalConfig/globalConfig'\n\n    export default {\n\n        name:\"RechercheLogement\",\n\n        data(){\n\n            return{\n                menu: false,\n                logementList : [],\n                tousLesLogements : [],\n                logementsAvecImage : [],\n                proprieteProduitLogementList : [],\n                operateursCritereList : [],\n                critereRechercheProduitLogementList : [],\n                villesList : [],\n                referenceList : [],\n                nbreLimitInteger : 6,\n                lowerValue : 0   ,\n                upperValue : 0,\n            }\n\n        },\n\n        methods:{\n\n            async chargerCritereLogementList(){\n\n                // TODO : Creer une fonction pour l'affection des opérateurs\n\n                await this.getProprieteProduitLogementList()\n                await this.getOperateurCritereList()\n\n                if(this.proprieteProduitLogementList != null && this.proprieteProduitLogementList.length > 0){\n                    for (let index = 0; index < this.proprieteProduitLogementList.length; index++) {\n                        \n                        var critereRechercheProduitLogement = {\n                            id : null ,\n                            designation : null ,\n                            description : null ,\n                            proprieteProduitLogement : {\n                                id : null ,\n                                designation : null ,\n                                description : null ,\n                                estUsuelleFiltre : null,\n                                estChoixMultipleFiltre : null,\n                                maxValueIntegerFiltre : null ,\n                                minValueIntegerFiltre : null,\n                                maxValueFloatFiltre : null , //Type Float\n                                minValueFloatFiltre :null , //Type Float\n                                maxValueDoubleFiltre : null ,\n                                minValueDoubleFiltre : null ,\n                                maxValueDateFilter : null ,\n                                minValueDateFilter : null ,\n                                familleSiTypeReference : {\n                                    id : null ,\n                                    designation : null , \n                                    description : null\n                                },\n\n                                type : {\n                                    id : null , \n                                    code : null ,\n                                    designation : null,\n                                },\n\n                                familleProprieteProduitLogement : {\n                                    id : null,\n                                    designation : null \n                                },\n\n                                icone: {\n                                    id : null ,\n                                    designation : null ,\n                                    description : null ,\n                                    contenu : null ,\n                                    path : null ,\n                                    format : {\n                                        id : null ,\n                                    },\n                                    typeDocument : {\n                                        id : null \n                                    },\n                                    version : null\n                                },\n                                estObligatoire : null ,\n                                estDansListe : null \n                            },\n                            operateurCritere : {\n                                id : null ,\n                                code : null,\n                                designation : null\n                            },\n                            valeurCritere : {\n                                id : null,\n                                designation : null ,\n                                description : null ,\n                                valeurTexte : []\n                            }\n                        }\n                        critereRechercheProduitLogement.proprieteProduitLogement = this.proprieteProduitLogementList[index]\n\n                        if (critereRechercheProduitLogement.proprieteProduitLogement != null && critereRechercheProduitLogement.proprieteProduitLogement.type.id == REF_ELEMENT_TYPEVALEUR_REFERENCE){\n                            for (let index = 0; index < this.operateursCritereList.length; index++) {\n                                if (this.operateursCritereList[index].id == REF_CRITERE_OPERATEUR_IN) {\n                                    critereRechercheProduitLogement.operateurCritere = this.operateursCritereList[index]\n                                }\n                            }\n                        }\n\n                        if (critereRechercheProduitLogement.proprieteProduitLogement != null && critereRechercheProduitLogement.proprieteProduitLogement.type.id == REF_ELEMENT_TYPEVALEUR_VILLE){\n                            for (let index = 0; index < this.operateursCritereList.length; index++) {\n                                if (this.operateursCritereList[index].id == REF_CRITERE_OPERATEUR_IN) {\n                                    critereRechercheProduitLogement.operateurCritere = this.operateursCritereList[index]\n                                }\n                            }\n                        }\n                        \n                        if (critereRechercheProduitLogement.proprieteProduitLogement != null && critereRechercheProduitLogement.proprieteProduitLogement.type.id == REF_ELEMENT_TYPEVALEUR_FLOAT){\n                            for (let index = 0; index < this.operateursCritereList.length; index++) {\n                                if (this.operateursCritereList[index].id == REF_CRITERE_OPERATEUR_BETWEEN) {\n                                    critereRechercheProduitLogement.operateurCritere = this.operateursCritereList[index]\n                                }\n                            }\n                        }\n\n                        if (critereRechercheProduitLogement.proprieteProduitLogement != null && critereRechercheProduitLogement.proprieteProduitLogement.type.id == REF_ELEMENT_TYPEVALEUR_BOOLEAN){\n                            for (let index = 0; index < this.operateursCritereList.length; index++) {\n                                if (this.operateursCritereList[index].id == REF_CRITERE_OPERATEUR_IN) {\n                                    critereRechercheProduitLogement.operateurCritere = this.operateursCritereList[index]\n                                }\n                            }\n                        }\n\n                        if (critereRechercheProduitLogement.proprieteProduitLogement != null && critereRechercheProduitLogement.proprieteProduitLogement.type.id == REF_ELEMENT_TYPEVALEUR_DATETIME){\n                            for (let index = 0; index < this.operateursCritereList.length; index++) {\n                                if (this.operateursCritereList[index].id == REF_CRITERE_OPERATEUR_IN) {\n                                    critereRechercheProduitLogement.operateurCritere = this.operateursCritereList[index]\n                                }\n                            }\n                        }\n\n                        if (critereRechercheProduitLogement.proprieteProduitLogement != null && critereRechercheProduitLogement.proprieteProduitLogement.type.id == REF_ELEMENT_TYPEVALEUR_DATE){\n                            for (let index = 0; index < this.operateursCritereList.length; index++) {\n                                if (this.operateursCritereList[index].id == REF_CRITERE_OPERATEUR_IN) {\n                                    critereRechercheProduitLogement.operateurCritere = this.operateursCritereList[index]\n                                }\n                            }\n                        }\n\n                        if (critereRechercheProduitLogement.proprieteProduitLogement != null && critereRechercheProduitLogement.proprieteProduitLogement.type.id == REF_ELEMENT_TYPEVALEUR_TIME){\n                            for (let index = 0; index < this.operateursCritereList.length; index++) {\n                                if (this.operateursCritereList[index].id == REF_CRITERE_OPERATEUR_IN) {\n                                    critereRechercheProduitLogement.operateurCritere = this.operateursCritereList[index]\n                                }\n                            }\n\n                        }\n\n                        if (critereRechercheProduitLogement.proprieteProduitLogement != null && critereRechercheProduitLogement.proprieteProduitLogement.type.id == REF_ELEMENT_TYPEVALEUR_INTEGER){\n                            for (let index = 0; index < this.operateursCritereList.length; index++) {\n                                if (this.operateursCritereList[index].id == REF_CRITERE_OPERATEUR_IN) {\n                                    critereRechercheProduitLogement.operateurCritere = this.operateursCritereList[index]\n                                }\n                            }\n                        }\n\n                        if (critereRechercheProduitLogement.proprieteProduitLogement != null && critereRechercheProduitLogement.proprieteProduitLogement.type.id == REF_ELEMENT_TYPEVALEUR_DOUBLE){\n                            for (let index = 0; index < this.operateursCritereList.length; index++) {\n                                if (this.operateursCritereList[index].id == REF_CRITERE_OPERATEUR_BETWEEN) {\n                                    critereRechercheProduitLogement.operateurCritere = this.operateursCritereList[index]\n                                }\n                            }\n                        }\n                        this.critereRechercheProduitLogementList.push(critereRechercheProduitLogement);\n                    }\n                }\n            },\n\n\n            //OBTENIR LA LISTE DES PROPRIETES PRODUITS LOGEMENTS\n\n            async getProprieteProduitLogementList(){\n\n                await axios.get(API_OBTENIR_LISTE_PROPRIETES)\n                .then((response)  => {\n                    this.proprieteProduitLogementList = response.data.data\n                }).catch((error)  => {\n                    console.log(error)\n                })\n            },\n\n\n\n\n            // OBTENIR LA LISTE DES REFERENCES PAR FAMILLES TYPES LOGEMENTS \n\n            async getReferenceList(){\n\n                await axios.get(API_REFERENCES_PAR_FAMILLE('familleTypeLogement'))\n                .then((response)  => {\n                    this.referenceList = response.data.data\n                }).catch((error)  => {\n                    console.log(error)\n                })\n            },\n\n\n\n            // OBTENIR LA LISTE DES VILLES \n\n            async getVillesList(){\n\n                await axios.get(API_OBTENIR_LISTE_VILLES)\n                .then((response)  => {\n                    this.villesList = response.data.data\n                }).catch((error)  => {\n                    console.log(error)\n                })\n            },\n\n\n\n\n            // OBTENIR LA LISTE DES OPERATEURS CRITERES\n\n            async getOperateurCritereList(){\n\n                await axios.get(API_OBTENIR_LISTE_OPERATEUR_CRITERE)\n                .then((response)  => {\n                    this.operateursCritereList = response.data.data\n                }).catch((error)  => {\n                    console.log(error)\n                })\n            },\n\n\n\n            async chargerLogementCompletClient(){\n\n                await this.obtenirTousLesLogementCrees()\n\n                if (this.tousLesLogements.length > 0) {\n                    for (let index = 0; index < this.tousLesLogements.length; index++) {\n                            \n                        var logementComplet = {\n                            id : null ,\n                            designation : null ,\n                            description : null ,\n                            estActive : null , \n                            optionLogementList : [],\n                            produitLogement : {},\n                            imageConsultation: {\n                                id: null,\n                                designation: null,\n                                description: null,\n                                contenu: null,\n                                format: {\n                                    id: null,\n                                    version: null,\n                                },\n                                typeDocument:{\n                                    id: \"ref.element.typeValeur.imageConsultation\"\n                                },\n                                version : null\n                            },\n                        }\n\n                        logementComplet.id = this.tousLesLogements[index].id\n                        logementComplet.designation = this.tousLesLogements[index].designation\n                        logementComplet.description = this.tousLesLogements[index].description\n                        logementComplet.estActive = this.tousLesLogements[index].estActive\n                        logementComplet.produitLogement = this.tousLesLogements[index].produitLogement\n                        this.logementsAvecImage.push(logementComplet)\n                    \n                    }    \n                                            \n                }\n\n                if (this.logementsAvecImage.length > 0) {\n                    for (let count = 0; count < this.logementsAvecImage.length; count++) {\n\n                        var image = {\n                            id: null,\n                            designation: null,\n                            description: null,\n                            contenu: null,\n                            format: {\n                                id: null,\n                                version: null,\n                            },\n                            typeDocument:{\n                                id: \"ref.element.typeValeur.imageConsultation\"\n                            },\n                            version : null\n                        }\n\n                        // On charge ici l'image de consultation\n                        await axios.get(API_OBTENIR_IMAGE_CONSULTATION(this.logementsAvecImage[count].produitLogement.id ,\"ref.element.typeValeur.imageConsultation\"))\n                        .then((response) => {\n                            if (response.data == \"\") {\n                                return ;\n                            }\n                            else {\n                                image = response.data.data;\n                            }\n                                this.logementsAvecImage[count].imageConsultation = image\n                        })\n                            \n                    }\n                }\n\n            },\n\n\n            //OBTENIR LA LISTE DES LOGEMENTS PAR PROMOTEURS\n            async obtenirTousLesLogementCrees() {\n                await axios.get(API_OBTENIR_LISTE_LOGEMENT_PAR_PROMOTEUR('promoteur01'))\n                .then((response) => {\n                    for (let index = 0; index < response.data.data.length; index++) {                   \n                        this.tousLesLogements.push(response.data.data[index])       \n                    }\n                }).catch((error) => {\n                    console.log(error)\n                })\n            },\n\n\n\n            // RECHERCHE DE LOGEMENTS PAR UNE LISTE DE CRITERES (CRITERES SELECTIONNÉS PAR LE PROSPECT)\n\n            async rechercheParCriteresList(critereList){\n\n                for (let run = 0; run < critereList.length; run++) {\n                    if(critereList[run].proprieteProduitLogement.type.id == REF_ELEMENT_TYPEVALEUR_INTEGER){\n                        for (let runner = 0; runner < critereList[run].valeurCritere.valeurTexte.length; runner++) {\n                            if (critereList[run].valeurCritere.valeurTexte[runner] == \"5 et plus\") {\n                                critereList[run].valeurCritere.valeurTexte = this.modifyValeurTexte(critereList[run])\n                            }  \n                        }\n                    }   \n                }\n\n                await axios.post(API_RECHERCHER_PRODUIT_LOGEMENT_PAR_CRITERELIST , critereList)\n                .then((response) => {\n                    this.logementsAvecImage = []\n                    if (response.data.data.length > 0) {\n                        for (let index = 0; index < response.data.data.length; index++) {\n\n                            var image ;\n                            var logementComplet = {\n                                produitLogement : {\n                                    id: null,\n                                    designation: null,\n                                    description: null,\n                                    code: null,\n                                    programmeImmobilier: {  \n                                        id: null,\n                                        version: null,\n                                    },\n                                    caracteristiqueProduitLogementList: [],\n                                    version: null,\n                                    estValide: null,\n                                    estActive : null,\n                                },\n                                imageConsultation: {\n                                    id: null,\n                                    designation: null,\n                                    description: null,\n                                    contenu: null,\n                                    format: {\n                                        id: null,\n                                        version: null,\n                                    },\n                                    typeDocument:{\n                                        id: \"ref.element.typeValeur.imageConsultation\"\n                                    },\n                                    version : null\n                                },\n                            }\n\n                            logementComplet.produitLogement = response.data.data[index]\n                            this.logementsAvecImage.push(logementComplet)    \n\n                            /*Ici , on recupere les documents liés à un produit logement tels que:\n                            image de consultation , listes des images , listes des videos*/\n\n                            \n                            axios.get(API_OBTENIR_IMAGE_CONSULTATION(this.logementsAvecImage[index].produitLogement.id ,\"ref.element.typeValeur.imageConsultation\"))\n                            .then((resultat) => {\n                                if (resultat.data == \"\") {    \n                                    return ;       \n                                }\n                                else {\n                                    image = resultat.data.data;\n                                }\n                                this.logementsAvecImage[index].imageConsultation = image\n                            })\n                        }\n                    }\n                }).catch((error)=> {\n                    console.log(error)\n                })\n\n                this.cleanAllValeurTexte(critereList);\n\n            },\n\n\n\n            // Avec cette methode , on videra la liste des valeurTexte de tous les criteres de recherche\n\n            cleanAllValeurTexte(critereList){\n                for (let index = 0; index < critereList.length; index++) {\n                    critereList[index].valeurCritere.valeurTexte = []\n                }\n            },\n\n\n\n\n            modifyValeurTexte(critere){\n\n                var valeurMin = critere.proprieteProduitLogement.minValueIntegerFiltre\n                var valeurMax = critere.proprieteProduitLogement.maxValueIntegerFiltre\n                var valeurCompriseMinEtMax = [];\n                var cinqPremierValeurs = [] ;\n                var valeurPlus = [];\n                var compteur = 1\n\n                while(compteur <= 5 && valeurMin <= valeurMax){\n                    cinqPremierValeurs.push(valeurMin++)\n                    compteur++\n                }\n\n                for (let index = valeurMin; index <= valeurMax; index++) {\n                    valeurCompriseMinEtMax.push(index)\n                }\n\n                for (var i = cinqPremierValeurs.at(-1); i <= valeurMax; i++) {\n                    valeurPlus.push(i.toString());\n                }\n\n                for (let count = 0; count < critere.valeurCritere.valeurTexte.length; count++) {\n                    if (critere.valeurCritere.valeurTexte[count] == \"5 et plus\") {\n                        for (let counter = 0; counter < valeurPlus.length; counter++) {\n                            if (critere.valeurCritere.valeurTexte[count] == valeurPlus[counter]) {\n                                critere.valeurCritere.valeurTexte.splice(count , 0)\n                            }  \n                        }\n                        Array.prototype.splice.apply(critere.valeurCritere.valeurTexte, [count, valeurPlus.length].concat(valeurPlus));\n                    }\n                }\n                return critere.valeurCritere.valeurTexte\n            },\n\n\n\n\n            returnListOfInteger(){\n                var cinqPremierValeurs = [1 , 2 , 3 , 4 , \"5 et plus\"]\n                return cinqPremierValeurs;\n            },\n\n\n\n            returnValueOfCritereTypeInteger(nbre){\n                var rtn ;                       \n                if (nbre.toString() === \"5 et plus\") {\n                    rtn = nbre.toString()        \n                } \n                if (nbre.toString() !== \"5 et plus\") {\n                    rtn = nbre.toString()     \n                }\n                return rtn; \n            },\n\n\n\n            //Cette fonction convertira notre valeur en boolean true/false selon si l'option est selectionné\n\n            getValueTrueOrFalse(item){\n                var responseTrueOrFalse\n                if(item == \"\" || item == null){\n                    responseTrueOrFalse = \"false\"   \n                }\n                else {\n                    responseTrueOrFalse = \"true\"\n                }\n                return responseTrueOrFalse\n            },\n\n\n\n            //Cette methode permettra de retourner la véritable valeur (ValeurTexte) des caracteristiques\n\n\n            returnTrueValue(caracteristique){\n\n                var trueValue;\n\n                if(caracteristique == null) return null; \n\n                if(caracteristique.proprieteProduitLogement.type.id == REF_ELEMENT_TYPEVALEUR_REFERENCE){\n                    for (let index = 0; index < this.referenceList.length; index++) {\n                        if (this.referenceList[index].id == caracteristique.valeurTexte) {\n                            trueValue = this.referenceList[index].designation\n                        }\n                    }\n                }\n\n                else if(caracteristique.proprieteProduitLogement.type.id == REF_ELEMENT_TYPEVALEUR_VILLE){\n                    for (let index = 0; index < this.villesList.length; index++) {\n                        if (this.villesList[index].id == caracteristique.valeurTexte) {     \n                            trueValue = this.villesList[index].designation\n                        }\n                    }\n                }\n\n                else if(caracteristique.proprieteProduitLogement.type.id == REF_ELEMENT_TYPEVALEUR_BOOLEAN){\n                    if (caracteristique.valeurTexte == \"true\") {\n                        trueValue = \"\"\n                    }\n                }\n                else {\n                    trueValue = caracteristique.valeurTexte\n                }\n\n                return trueValue;\n\n            },\n\n\n\n            // Fonction pour récuperer la premiere valeur du slider \"prix d'acquisition\"\n\n            getFirstValue(critere){\n                var rtn; \n\n                if (this.lowerValue == 0) {\n                    rtn = critere.proprieteProduitLogement.minValueDoubleFiltre\n                } else {\n                    rtn = this.lowerValue\n                } \n\n                critere.valeurCritere.valeurTexte[0] = rtn\n                return rtn\n            },\n\n\n\n            // Fonction pour récuperer la seconde valeur du slider \"prix d'acquisition\"\n\n            getSecondValue(critere){\n                var rtn; \n                if (this.upperValue == 0) {\n                    rtn = critere.proprieteProduitLogement.maxValueDoubleFiltre\n                } else {\n                    rtn = this.upperValue\n                }\n                critere.valeurCritere.valeurTexte[1] = rtn;\n                return rtn;\n            },\n\n\n\n            //Page de consulation du logement sélectionné\n            consulterLogementDetail(logement){\n                const parsedLogement = JSON.stringify(logement)\n                localStorage.setItem('logement' , parsedLogement)\n                this.$router.push({name : 'LogementDetail' , params: { id :logement.id  } })\n            },\n\n\n\n            // Page de simulation de financement immobilier d'un logement\n            simulationFinancementLogement(){\n                this.$router.push( { path:\"/CreerModifierSimulationFinancementImmobilier\" } )\n            },\n\n\n        },\n\n\n    \n\n        computed : {\n\n            /* Grâce à cette méthode, nous allons générer la liste necessaire a la recherche d'un produit logement.\n            C'est à dire , envoyer au serveur seulement les criteres qui dont des \"valeurTexte\" renseignés*/\n\n            getCritereListForSearch(){\n                var critereList = [];\n                for (let index = 0; index < this.critereRechercheProduitLogementList.length; index++) {\n                    if (this.critereRechercheProduitLogementList[index].valeurCritere.valeurTexte != \"\"\n                        && this.critereRechercheProduitLogementList[index].valeurCritere.valeurTexte != null) {\n                        critereList.push(this.critereRechercheProduitLogementList[index])\n                    }\n                }\n                return critereList ;\n            },\n\n\n            getListOfCritereRechercheOptional(){\n                var critereRechercheOptionalList = [];\n                if (this.critereRechercheProduitLogementList.length > 0) {\n                    for (let index = 0; index < this.critereRechercheProduitLogementList.length; index++) {\n                        if(this.critereRechercheProduitLogementList[index].proprieteProduitLogement.type.id == 'ref.element.typeValeur.boolean'){\n                            critereRechercheOptionalList.push(this.critereRechercheProduitLogementList[index])\n                        }\n                    }                   \n                }\n                return critereRechercheOptionalList;\n            }\n        },\n\n\n        mounted(){\n            this.chargerLogementCompletClient();\n            this.chargerCritereLogementList();\n            this.getVillesList();\n            this.getReferenceList();\n        }\n        \n    }\n</script>\n\n\n<style scoped>\n\n    .toolbar_title{\n        font-weight: bold;\n        color: #5f27cd;\n    }\n\n    .price{\n        margin-top: 0;\n    }\n\n    .checkboxes{\n        margin-top: -10px;\n    }\n\n</style>"]}]}