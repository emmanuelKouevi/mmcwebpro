{"remainingRequest":"/home/kouevi/mmcwebpro/mmc_web_pro/node_modules/babel-loader/lib/index.js!/home/kouevi/mmcwebpro/mmc_web_pro/node_modules/vuetify/lib/components/VCalendar/modes/column.js","dependencies":[{"path":"/home/kouevi/mmcwebpro/mmc_web_pro/node_modules/vuetify/lib/components/VCalendar/modes/column.js","mtime":1663945702991},{"path":"/home/kouevi/mmcwebpro/mmc_web_pro/babel.config.js","mtime":1663945696927},{"path":"/home/kouevi/mmcwebpro/mmc_web_pro/node_modules/cache-loader/dist/cjs.js","mtime":1663945505146},{"path":"/home/kouevi/mmcwebpro/mmc_web_pro/node_modules/babel-loader/lib/index.js","mtime":1663945505798}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZ2V0T3ZlcmxhcEdyb3VwSGFuZGxlciB9IGZyb20gJy4vY29tbW9uJzsKY29uc3QgRlVMTF9XSURUSCA9IDEwMDsKZXhwb3J0IGNvbnN0IGNvbHVtbiA9IChldmVudHMsIGZpcnN0V2Vla2RheSwgb3ZlcmxhcFRocmVzaG9sZCkgPT4gewogIGNvbnN0IGhhbmRsZXIgPSBnZXRPdmVybGFwR3JvdXBIYW5kbGVyKGZpcnN0V2Vla2RheSk7CiAgcmV0dXJuIChkYXksIGRheUV2ZW50cywgdGltZWQsIHJlc2V0KSA9PiB7CiAgICBjb25zdCB2aXN1YWxzID0gaGFuZGxlci5nZXRWaXN1YWxzKGRheSwgZGF5RXZlbnRzLCB0aW1lZCwgcmVzZXQpOwoKICAgIGlmICh0aW1lZCkgewogICAgICB2aXN1YWxzLmZvckVhY2godmlzdWFsID0+IHsKICAgICAgICB2aXN1YWwubGVmdCA9IHZpc3VhbC5jb2x1bW4gKiBGVUxMX1dJRFRIIC8gdmlzdWFsLmNvbHVtbkNvdW50OwogICAgICAgIHZpc3VhbC53aWR0aCA9IEZVTExfV0lEVEggLyB2aXN1YWwuY29sdW1uQ291bnQ7CiAgICAgIH0pOwogICAgfQoKICAgIHJldHVybiB2aXN1YWxzOwogIH07Cn07"},{"version":3,"mappings":"AACA,SAASA,sBAAT,QAAuC,UAAvC;AAEA,MAAMC,UAAU,GAAG,GAAnB;AAEA,OAAO,MAAMC,MAAM,GAA6B,CAACC,MAAD,EAASC,YAAT,EAAuBC,gBAAvB,KAA2C;EACzF,MAAMC,OAAO,GAAGN,sBAAsB,CAACI,YAAD,CAAtC;EAEA,OAAO,CAACG,GAAD,EAAMC,SAAN,EAAiBC,KAAjB,EAAwBC,KAAxB,KAAiC;IACtC,MAAMC,OAAO,GAAGL,OAAO,CAACM,UAAR,CAAmBL,GAAnB,EAAwBC,SAAxB,EAAmCC,KAAnC,EAA0CC,KAA1C,CAAhB;;IAEA,IAAID,KAAJ,EAAW;MACTE,OAAO,CAACE,OAAR,CAAgBC,MAAM,IAAG;QACvBA,MAAM,CAACC,IAAP,GAAcD,MAAM,CAACZ,MAAP,GAAgBD,UAAhB,GAA6Ba,MAAM,CAACE,WAAlD;QACAF,MAAM,CAACG,KAAP,GAAehB,UAAU,GAAGa,MAAM,CAACE,WAAnC;MAFF;IAID;;IAED,OAAOL,OAAP;EAVF;AAHK","names":["getOverlapGroupHandler","FULL_WIDTH","column","events","firstWeekday","overlapThreshold","handler","day","dayEvents","timed","reset","visuals","getVisuals","forEach","visual","left","columnCount","width"],"sourceRoot":"","sources":["../../../../src/components/VCalendar/modes/column.ts"],"sourcesContent":["import { CalendarEventOverlapMode } from 'vuetify/types'\nimport { getOverlapGroupHandler } from './common'\n\nconst FULL_WIDTH = 100\n\nexport const column: CalendarEventOverlapMode = (events, firstWeekday, overlapThreshold) => {\n  const handler = getOverlapGroupHandler(firstWeekday)\n\n  return (day, dayEvents, timed, reset) => {\n    const visuals = handler.getVisuals(day, dayEvents, timed, reset)\n\n    if (timed) {\n      visuals.forEach(visual => {\n        visual.left = visual.column * FULL_WIDTH / visual.columnCount\n        visual.width = FULL_WIDTH / visual.columnCount\n      })\n    }\n\n    return visuals\n  }\n}\n"]}]}