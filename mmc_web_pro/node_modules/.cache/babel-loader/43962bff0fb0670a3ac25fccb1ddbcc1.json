{"remainingRequest":"/home/kouevi/mmcwebpro/mmc_web_pro/node_modules/babel-loader/lib/index.js!/home/kouevi/mmcwebpro/mmc_web_pro/node_modules/vuetify/lib/mixins/translatable/index.js","dependencies":[{"path":"/home/kouevi/mmcwebpro/mmc_web_pro/node_modules/vuetify/lib/mixins/translatable/index.js","mtime":1663945703143},{"path":"/home/kouevi/mmcwebpro/mmc_web_pro/babel.config.js","mtime":1663945696927},{"path":"/home/kouevi/mmcwebpro/mmc_web_pro/node_modules/cache-loader/dist/cjs.js","mtime":1663945505146},{"path":"/home/kouevi/mmcwebpro/mmc_web_pro/node_modules/babel-loader/lib/index.js","mtime":1663945505798}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZXJyb3IuY2F1c2UuanMiOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmV4cG9ydCBkZWZhdWx0IFZ1ZS5leHRlbmQoewogIG5hbWU6ICd0cmFuc2xhdGFibGUnLAogIHByb3BzOiB7CiAgICBoZWlnaHQ6IE51bWJlcgogIH0sCiAgZGF0YTogKCkgPT4gKHsKICAgIGVsT2Zmc2V0VG9wOiAwLAogICAgcGFyYWxsYXg6IDAsCiAgICBwYXJhbGxheERpc3Q6IDAsCiAgICBwZXJjZW50U2Nyb2xsZWQ6IDAsCiAgICBzY3JvbGxUb3A6IDAsCiAgICB3aW5kb3dIZWlnaHQ6IDAsCiAgICB3aW5kb3dCb3R0b206IDAKICB9KSwKICBjb21wdXRlZDogewogICAgaW1nSGVpZ2h0KCkgewogICAgICByZXR1cm4gdGhpcy5vYmpIZWlnaHQoKTsKICAgIH0KCiAgfSwKCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLnRyYW5zbGF0ZSwgZmFsc2UpOwogICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMudHJhbnNsYXRlLCBmYWxzZSk7CiAgfSwKCiAgbWV0aG9kczogewogICAgY2FsY0RpbWVuc2lvbnMoKSB7CiAgICAgIGNvbnN0IG9mZnNldCA9IHRoaXMuJGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOwogICAgICB0aGlzLnNjcm9sbFRvcCA9IHdpbmRvdy5wYWdlWU9mZnNldDsKICAgICAgdGhpcy5wYXJhbGxheERpc3QgPSB0aGlzLmltZ0hlaWdodCAtIHRoaXMuaGVpZ2h0OwogICAgICB0aGlzLmVsT2Zmc2V0VG9wID0gb2Zmc2V0LnRvcCArIHRoaXMuc2Nyb2xsVG9wOwogICAgICB0aGlzLndpbmRvd0hlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodDsKICAgICAgdGhpcy53aW5kb3dCb3R0b20gPSB0aGlzLnNjcm9sbFRvcCArIHRoaXMud2luZG93SGVpZ2h0OwogICAgfSwKCiAgICBsaXN0ZW5lcnMoKSB7CiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLnRyYW5zbGF0ZSwgZmFsc2UpOwogICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy50cmFuc2xhdGUsIGZhbHNlKTsKICAgIH0sCgogICAgLyoqIEBhYnN0cmFjdCAqKi8KICAgIG9iakhlaWdodCgpIHsKICAgICAgdGhyb3cgbmV3IEVycm9yKCdOb3QgaW1wbGVtZW50ZWQgIScpOwogICAgfSwKCiAgICB0cmFuc2xhdGUoKSB7CiAgICAgIHRoaXMuY2FsY0RpbWVuc2lvbnMoKTsKICAgICAgdGhpcy5wZXJjZW50U2Nyb2xsZWQgPSAodGhpcy53aW5kb3dCb3R0b20gLSB0aGlzLmVsT2Zmc2V0VG9wKSAvIChwYXJzZUludCh0aGlzLmhlaWdodCkgKyB0aGlzLndpbmRvd0hlaWdodCk7CiAgICAgIHRoaXMucGFyYWxsYXggPSBNYXRoLnJvdW5kKHRoaXMucGFyYWxsYXhEaXN0ICogdGhpcy5wZXJjZW50U2Nyb2xsZWQpOwogICAgfQoKICB9Cn0pOw=="},{"version":3,"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,eAAeA,GAAG,CAACC,MAAJ,CAAW;EACxBC,IAAI,EAAE,cADkB;EAGxBC,KAAK,EAAE;IACLC,MAAM,EAAEC;EADH,CAHiB;EAOxBC,IAAI,EAAE,OAAO;IACXC,WAAW,EAAE,CADF;IAEXC,QAAQ,EAAE,CAFC;IAGXC,YAAY,EAAE,CAHH;IAIXC,eAAe,EAAE,CAJN;IAKXC,SAAS,EAAE,CALA;IAMXC,YAAY,EAAE,CANH;IAOXC,YAAY,EAAE;EAPH,CAAP,CAPkB;EAiBxBC,QAAQ,EAAE;IACRC,SAAS;MACP,OAAO,KAAKC,SAAL,EAAP;IACD;;EAHO,CAjBc;;EAuBxBC,aAAa;IACXC,MAAM,CAACC,mBAAP,CAA2B,QAA3B,EAAqC,KAAKC,SAA1C,EAAqD,KAArD;IACAF,MAAM,CAACC,mBAAP,CAA2B,QAA3B,EAAqC,KAAKC,SAA1C,EAAqD,KAArD;EAzBsB;;EA4BxBC,OAAO,EAAE;IACPC,cAAc;MACZ,MAAMC,MAAM,GAAG,KAAKC,GAAL,CAASC,qBAAT,EAAf;MAEA,KAAKd,SAAL,GAAiBO,MAAM,CAACQ,WAAxB;MACA,KAAKjB,YAAL,GAAoB,KAAKM,SAAL,GAAiB,KAAKX,MAA1C;MACA,KAAKG,WAAL,GAAmBgB,MAAM,CAACI,GAAP,GAAa,KAAKhB,SAArC;MACA,KAAKC,YAAL,GAAoBM,MAAM,CAACU,WAA3B;MACA,KAAKf,YAAL,GAAoB,KAAKF,SAAL,GAAiB,KAAKC,YAA1C;IARK;;IAUPiB,SAAS;MACPX,MAAM,CAACY,gBAAP,CAAwB,QAAxB,EAAkC,KAAKV,SAAvC,EAAkD,KAAlD;MACAF,MAAM,CAACY,gBAAP,CAAwB,QAAxB,EAAkC,KAAKV,SAAvC,EAAkD,KAAlD;IAZK;;IAcP;IACAJ,SAAS;MACP,MAAM,IAAIe,KAAJ,CAAU,mBAAV,CAAN;IAhBK;;IAkBPX,SAAS;MACP,KAAKE,cAAL;MAEA,KAAKZ,eAAL,GACE,CAAC,KAAKG,YAAL,GAAoB,KAAKN,WAA1B,KACCyB,QAAQ,CAAC,KAAK5B,MAAN,CAAR,GAAwB,KAAKQ,YAD9B,CADF;MAKA,KAAKJ,QAAL,GAAgByB,IAAI,CAACC,KAAL,CAAW,KAAKzB,YAAL,GAAoB,KAAKC,eAApC,CAAhB;IACD;;EA3BM;AA5Be,CAAX,CAAf","names":["Vue","extend","name","props","height","Number","data","elOffsetTop","parallax","parallaxDist","percentScrolled","scrollTop","windowHeight","windowBottom","computed","imgHeight","objHeight","beforeDestroy","window","removeEventListener","translate","methods","calcDimensions","offset","$el","getBoundingClientRect","pageYOffset","top","innerHeight","listeners","addEventListener","Error","parseInt","Math","round"],"sourceRoot":"","sources":["../../../src/mixins/translatable/index.ts"],"sourcesContent":["import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'translatable',\n\n  props: {\n    height: Number,\n  },\n\n  data: () => ({\n    elOffsetTop: 0,\n    parallax: 0,\n    parallaxDist: 0,\n    percentScrolled: 0,\n    scrollTop: 0,\n    windowHeight: 0,\n    windowBottom: 0,\n  }),\n\n  computed: {\n    imgHeight (): number {\n      return this.objHeight()\n    },\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('scroll', this.translate, false)\n    window.removeEventListener('resize', this.translate, false)\n  },\n\n  methods: {\n    calcDimensions () {\n      const offset = this.$el.getBoundingClientRect()\n\n      this.scrollTop = window.pageYOffset\n      this.parallaxDist = this.imgHeight - this.height\n      this.elOffsetTop = offset.top + this.scrollTop\n      this.windowHeight = window.innerHeight\n      this.windowBottom = this.scrollTop + this.windowHeight\n    },\n    listeners () {\n      window.addEventListener('scroll', this.translate, false)\n      window.addEventListener('resize', this.translate, false)\n    },\n    /** @abstract **/\n    objHeight (): number {\n      throw new Error('Not implemented !')\n    },\n    translate () {\n      this.calcDimensions()\n\n      this.percentScrolled = (\n        (this.windowBottom - this.elOffsetTop) /\n        (parseInt(this.height) + this.windowHeight)\n      )\n\n      this.parallax = Math.round(this.parallaxDist * this.percentScrolled)\n    },\n  },\n})\n"]}]}